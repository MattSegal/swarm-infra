---
- hosts: swarm
  remote_user: root
  tasks:
    - include_vars: ./secrets.yml
    - name: Test connection
      ping:

    # LetsEncrypt CertBot
    - name: Add Certbot apt repo
      apt_repository:
        repo: ppa:certbot/certbot

    - name: Update apt cache
      apt: update_cache=yes

    # Lets Encrypt Certbot
    - name: Install Certbot
      apt:
        name: python-certbot-nginx
        state: present

    # NGINX
    - name: Install nginx
      apt:
        name: nginx
        state: present
    - name: Copy nginx config
      copy:
        src: ./files/nginx/nginx.conf
        dest: /etc/nginx/nginx.conf
        owner: www-data
        group: www-data
        mode: 0644
    - name: Copy nginx SSL params
      copy:
        src: ./files/nginx/ssl-params.conf
        dest: /etc/nginx/ssl-params.conf
        owner: www-data
        group: www-data
        mode: 0644
    - name: Copy website config
      copy:
        src: ./files/nginx/website
        dest: /etc/nginx/sites-available/website
        owner: www-data
        group: www-data
        mode: 0644
    - name: Symlink website config
      file:
        src: /etc/nginx/sites-available/website
        dest: /etc/nginx/sites-enabled/website
        owner: www-data
        group: www-data
        state: link
    - name: Remove default config
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
    - name: Restart nginx
      service:
        name: nginx
        state: restarted

    # Postgres
    - name: Install PostgreSQL
      apt: name={{ item }} state=present
      with_items:
        - postgresql
        - postgresql-contrib
        - libpq-dev
        - python-dev
        - python-psycopg2
    - name: Copy postgresql config
      copy:
        src: ./files/postgres/postgresql.conf
        dest: /etc/postgresql/9.5/main/postgresql.conf
        owner: postgres
        group: postgres
        mode: 0644
    - name: Copy postgres hosts config
      copy:
        src: ./files/postgres/pg_hba.conf
        dest: /etc/postgresql/9.5/main/pg_hba.conf
        owner: postgres
        group: postgres
        mode: 0640

    - name: Setup reddit user
      become: true
      become_user: postgres
      postgresql_user:
        name: "{{ db_user_reddit }}"
        password: "{{ db_password_reddit }}"
    - name: Setup reddit database
      become: true
      become_user: postgres
      postgresql_db:
        name: reddit
        state: present
        owner: "{{ db_user_reddit }}"
        port: 5432
        lc_collate: en_US.UTF-8
        lc_ctype: en_US.UTF-8
    - name: Setup photos user
      become: true
      become_user: postgres
      postgresql_user:
        name: "{{ db_user_photos }}"
        password: "{{ db_password_photos }}"
    - name: Setup photos database
      become: true
      become_user: postgres
      postgresql_db:
        name: photos
        state: present
        owner: "{{ db_user_photos }}"
        port: 5432
        lc_collate: en_US.UTF-8
        lc_ctype: en_US.UTF-8
    - name: Setup links user
      become: true
      become_user: postgres
      postgresql_user:
        name: "{{ db_user_links }}}"
        password: "{{ db_password_links }}"
    - name: Setup links database
      become: true
      become_user: postgres
      postgresql_db:
        name: links
        state: present
        owner: "{{ db_user_links }}}"
        port: 5432
        lc_collate: en_US.UTF-8
        lc_ctype: en_US.UTF-8

    - name: Restart postgresql
      service:
        name: postgresql
        state: restarted

    # Secrets / parameterized config
    - lineinfile:
        path: /etc/environment
        regexp: '^AWS_ACCESS_KEY_ID'
        line: 'AWS_ACCESS_KEY_ID="{{ aws_access_key_id }}"'
    - lineinfile:
        path: /etc/environment
        regexp: '^AWS_SECRET_ACCESS_KEY'
        line: 'AWS_SECRET_ACCESS_KEY="{{ aws_secret_access_key }}"'
    - lineinfile:
        path: /etc/environment
        regexp: '^DJANGO_SECRET_KEY'
        line: 'DJANGO_SECRET_KEY="{{ django_secret_key }}"'

    # Links app
    - lineinfile:
        path: /etc/environment
        regexp: '^LINKS_RAVEN_DSN'
        line: 'LINKS_RAVEN_DSN="{{ links_raven_dsn }}"'
    - lineinfile:
        path: /etc/environment
        regexp: '^LINKS_DB_USER'
        line: 'LINKS_DB_USER="{{ db_user_links }}"'
    - lineinfile:
        path: /etc/environment
        regexp: '^LINKS_DB_PASSWORD'
        line: 'LINKS_DB_PASSWORD="{{ db_password_links }}"'
    - lineinfile:
        path: /etc/environment
        regexp: '^LINKS_DB_HOST'
        line: 'LINKS_DB_HOST="167.99.78.141"'

    # Reddit app
    - lineinfile:
        path: /etc/environment
        regexp: '^REDDIT_DB_USER'
        line: 'REDDIT_DB_USER="{{ db_user_reddit }}"'
    - lineinfile:
        path: /etc/environment
        regexp: '^REDDIT_DB_PASSWORD'
        line: 'REDDIT_DB_PASSWORD="{{ db_password_reddit }}"'
    - lineinfile:
        path: /etc/environment
        regexp: '^REDDIT_DB_HOST'
        line: 'REDDIT_DB_HOST="167.99.78.141"'

    # Photos app
    - lineinfile:
        path: /etc/environment
        regexp: '^PHOTOS_RAVEN_DSN'
        line: 'PHOTOS_RAVEN_DSN="{{ photos_raven_dsn }}"'
    - lineinfile:
        path: /etc/environment
        regexp: '^PHOTOS_DB_USER'
        line: 'PHOTOS_DB_USER="{{ db_user_photos }}"'
    - lineinfile:
        path: /etc/environment
        regexp: '^PHOTOS_DB_PASSWORD'
        line: 'PHOTOS_DB_PASSWORD="{{ db_password_photos }}"'
    - lineinfile:
        path: /etc/environment
        regexp: '^PHOTOS_DB_HOST'
        line: 'PHOTOS_DB_HOST="167.99.78.141"'

    # Folder Structure
    - name: Repo folder
      file:
        state: directory
        path: /root/repos
        owner: root
        group: root
    - name: Host scripts folder
      file:
        state: directory
        path: /root/scripts
        owner: root
        group: root
    - name: Database backups folder
      file:
        state: directory
        path: /root/backups
        owner: root
        group: root

    # Scripts
    - name: Copy database backup script
      copy:
        src: ../host-scripts/backup-db.sh
        dest: /root/scripts/
        owner: root
        group: root
        mode: 744

    # AWS CLI
    - name: Install pip
      apt:
        name: python3-pip
        state: present
    - pip:
        name: awscli
        executable: pip3

    - name: Reddit database backup job
      cron:
        hour: 0
        job: /root/scripts/backup-db.sh reddit

    - name: Photos database backup job
      cron:
        hour: 0
        job: /root/scripts/backup-db.sh photos
